#!/bin/bash
> /home/datacare/.ssh/known_hosts

# Function to run the Docker command on a remote machine
run_docker_command() {
    local ip="$1"
    local container_image="$2"
    local script="$3"

    # Check if SSH connection is successful
    if ! ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no "ubuntu@${ip}" 'exit'; then
        echo "SSH connection failed for ${ip}. Skipping."
        return
    fi

    echo "Running command on ${ip}..."
    ssh -o StrictHostKeyChecking=no "ubuntu@${ip}" <<EOF
    if sudo docker ps --format "" | grep -q "${container_image}"; then
        echo "Container with image ${container_image} is already running on ${ip}"
    else
        echo "Starting Docker container on ${ip}"
        sudo docker run --gpus all -d --rm -p 4000:4000 --network host "${container_image}" "${script}"
        echo "Docker command executed on ${ip}"
    fi
EOF
    # Check if SSH command was successful
    if [ $? -ne 0 ]; then
        echo "SSH command failed on ${ip}."
    fi
}

# List of IP address ranges for the first Docker image
ip_ranges_1=(
    "10.10.11"
    "10.10.12"
    "10.10.13"
    "10.10.14"
    "10.10.21"
    "10.10.22"
    "10.10.23"
    "10.10.24"
    "10.10.25"
    "10.10.111"
    "10.10.112"
    "10.10.113"
)

# List of IP address ranges for the second Docker image
ip_ranges_2=(
    "10.10.121"
    "10.10.122"
    "10.10.123"
    "10.10.124"
    "10.10.125"
)

container_image_1="bradenacurtis801/rbm-client:1.0"
container_image_2="bradenacurtis801/rbm-client-a4000x2:1.0"
script="./inject_init_bc.sh -s 10.10.111.3"

# Loop through the IP ranges for the first Docker image
for range in "${ip_ranges_1[@]}"; do
    for i in $(seq 1 20); do
        ip="${range}.${i}"
        run_docker_command "${ip}" "${container_image_1}" "${script}" &
    done
done

# Loop through the IP ranges for the second Docker image
for range in "${ip_ranges_2[@]}"; do
    for i in $(seq 1 20); do
        ip="${range}.${i}"
        run_docker_command "${ip}" "${container_image_2}" "${script}" &
    done
done

# Wait for all background processes to complete
wait
